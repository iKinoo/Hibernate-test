/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package testing_module_hibernate;

import java.time.LocalDateTime;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.boot.Metadata;
import org.hibernate.boot.MetadataSources;
import org.hibernate.boot.registry.StandardServiceRegistry;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;
import org.hibernate.internal.SessionFactoryImpl;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {

        SessionFactory sessionFactory;
        System.out.println(new App().getGreeting());
        StandardServiceRegistry registry = new StandardServiceRegistryBuilder()
                .build();
        try {
            Metadata metadata = new MetadataSources(registry)
                    .addAnnotatedClass(Event.class)
                    .buildMetadata();
            sessionFactory = metadata.buildSessionFactory();

        
                    sessionFactory.inTransaction(session -> {   
                        session.persist(new Event("Our very first event!", LocalDateTime.now()));   
                        session.persist(new Event("A follow up event", LocalDateTime.now()));
                    });

                    
                    sessionFactory.inTransaction(session -> {
                        session.createSelectionQuery("from Event", Event.class)   
                                .getResultList()   
                                .forEach(event -> System.out.println("Event (" + event.getDate() + ") : " + event.getTitle()));
                    });


        } catch (Exception e) {
            // The registry would be destroyed by the SessionFactory, but we
            // had trouble building the SessionFactory so destroy it manually.
            StandardServiceRegistryBuilder.destroy(registry);
        }

    }
}
